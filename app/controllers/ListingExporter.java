package controllers;

import com.google.appengine.api.datastore.*;
import com.google.appengine.api.taskqueue.Queue;
import com.google.appengine.api.taskqueue.QueueFactory;
import models.Listing;
import play.Logger;
import play.Play;
import play.mvc.Controller;
import uk.gov.gds.dm.DocumentUtils;
import uk.gov.gds.dm.ListingToJSONConverter;
import uk.gov.gds.dm.S3Uploader;

import java.util.List;
import java.util.Arrays;

import static com.google.appengine.api.taskqueue.TaskOptions.Builder.withUrl;

public class ListingExporter extends Controller {

    private static final S3Uploader completedUploader = new S3Uploader(String.valueOf(Play.configuration.get("s3.completed.export.bucket.name")));
    private static final S3Uploader draftUploader = new S3Uploader(String.valueOf(Play.configuration.get("s3.draft.export.bucket.name")));

    private final static int EXPORT_PAGE_SIZE = 500;

    private final static List<String> OK_SUPPLIER_IDS  = Arrays.asList("92462","580037","92914","92187","92947","586595","92541","586176",
            "92780","92189","586945","92476","92641","93608","92533","93420","93591","579575","93419","580047","92191","580346","93035","93072",
            "93255","584487","93104","581251","92192","92549","92649","92193","93168","93521","92410","93322","93191","580132","587370","93478",
            "92849","92738","92195","92881","92913","92582","92950","580646","584865","93400","92196","580020","585699","92978","586453","587350",
            "92197","587167","585143","92198","92856","583471","586380","93551","93555","93082","93584","580401","586073","582798","582283","93135",
            "93545","580533","93232","582296","580070","92199","93221","586110","93253","92200","584370","92204","93396","583667","93544","92205",
            "92876","583070","581302","579389","579359","580489","579163","92401","92941","93583","92206","93257","582376","580351","92656","93542",
            "92973","93272","93491","587200","92720","92603","93348","580999","92665","583216","92515","93029","92208","92209","93467","93060",
            "93363","93066","93618","92528","93256","92210","92211","587578","92412","92689","92212","93376","92782","92821","583742","92213",
            "93162","585351","587426","92538","93649","92822","93216","92214","585596","583046","92215","93129","92752","92555","92253","93248",
            "92497","587146","92216","92773","92477","92874","586136","580073","584522","92823","586121","580736","585734","584407","93405","93594",
            "93485","93027","93357","92489","587241","580940","92842","586007","92217","92415","93315","92642","92341","92658","586472","93128",
            "581109","579870","579884","581063","582665","586158","583766","580045","580328","93190","579324","92598","584711","579700","92416",
            "587681","92218","583516","579966","92839","92219","93246","92873","93559","92417","92905","92548","92937","93487","92584","586080",
            "92505","587130","93623","579949","586469","585243","93375","586422","587480","93456","92712","92220","92223","92419","93499","93212",
            "93273","580453","93189","92872","92904","92224","92566","92225","92936","586413","92569","93025","579431","92563","93408","92481",
            "92475","583459","579028","580025","93592","92227","93057","92824","585346","581398","92520","92228","93126","93372","92755","92229",
            "92230","92624","93188","92304","584101","92660","92231","93333","93213","587232","93244","587420","581561","581033","92980","92935",
            "584859","92504","93631","580500","584339","93024","93056","584408","92614","580298","580410","586960","92666","92620","584783","92232",
            "92920","92726","92579","92407","93518","586142","93156","580340","586784","92234","579179","93187","92615","587409","585895","92589",
            "93585","93606","581653","586081","585670","92421","586197","92455","579634","585274","586212","587352","92237","581651","584735","92422",
            "92783","93506","92510","92238","92604","580400","92240","579371","93572","93595","92692","92967","92423","92241","586649","587180",
            "587016","93055","93429","92245","93490","93155","581617","93383","585604","92246","93186","92605","585865","92790","581236","580350",
            "582793","92731","92247","585580","92248","92730","93292","92254","93537","584972","92907","92608","92939","92781","586814","92249",
            "92483","587087","580908","579237","92606","92250","93028","580142","93059","581317","92424","93528","93313","93097","583071","93637",
            "579200","92724","92654","92251","92485","584806","92252","579472","587527","93160","93359","581192","92686","93161","93215","580156",
            "587323","93613","580170","93476","93517","92699","586221","92851","581238","93406","92915","93392","584790","92557","582659","585693",
            "585425","92634","587299","93036","92532","93577","92768","93697","93105","586409","93610","586412","580120","580027","585383","93170",
            "579563","93304","93370","93538","587640","93223","92852","92399","92813","92495","587173","579844","579675","92425","92884","579754",
            "92256","92543","584997","579644","92257","93611","579107","585784","587235","92258","585314","579887","93347","92799","92651","92981",
            "586664","92259","579954","580172","92512","92496","93037","92260","579897","93074","92648","93106","587179","92709","93382","93529",
            "579420","582282","579509","92825","580248","92508","93193","92264","586334","581206","92536","586751","92650","92534","579090","92853",
            "92885","586236","92917","583033","92486","92693","92982","586872","585754","579226","92568","92266","587571","579086","92267","92826",
            "92769","93627","581019","93075","93681","582691","587385","93565","580425","92418","93552","92404","93139","92269","92427","93393",
            "92270","93653","586729","93523","93503","93171","583811","93455","92271","586800","92428","586523","93454","92272","583651","92273",
            "580292","92542","92577","92564","92718","92886","93690","92509","93387","92918","92275","580743","92951","93543","92276","92277","92429",
            "92430","92805","93498","582318","92792","586493","92278","585707","92983","93356","93007","585843","92623","585636","92594","583703",
            "580283","579281","583209","93615","93514","93308","93570","585413","587234","587057","92627","580146","93633","92812","583758","92618",
            "93527","583065","585732","585577","92281","93195","93226","92887","92758","584982","92479","92282","92447","579774","580285","92819",
            "582938","92714","92283","93319","93525","92284","92431","584425","585575","585291","580438","92722","579088","93567","587076","92286",
            "584942","92287","581239","93309","579613","92288","582427","579199","583392","92652","579374","92289","92985","92292","93598","584488",
            "92290","92291","92527","580995","92293","92565","93196","92739","92433","92888","584558","92593","92434","92294","92295","93349",
            "584576","92402","93607","579331","93298","583353","583947","93696","93078","581387","587351","583109","93142","93174","93679","93524",
            "93197","586661","92296","92646","93228","92784","583145","92954","93131","585224","92436","584508","579783","579740","93141","579249",
            "92472","582159","93079","93111","92437","583325","92827","586185","584955","586210","92745","92299","587210","586443","584805","92760",
            "92629","92300","583231","585791","92525","586485","93305","93303","93229","92890","93695","92922","92955","92987","93011","93043",
            "93325","92786","587524","92438","579951","587606","92439","93307","581545","92838","579559","93080","92302","579591","585758","92303",
            "92679","92507","585384","587068","93144","580286","586269","586241","92201","92440","587283","93268","93176","586095","585264","585023",
            "580396","587236","92891","579650","580215","585261","92956","92482","581278","586184","93012","587635","583337","92305","92502","92843",
            "582946","92711","580436","583054","583053","93424","92571","92753","580225","92409","93200","92817","587126","583011","92442","93312",
            "93643","92559","92811","92473","92860","92892","92540","92307","92924","92308","93343","93344","93345","93346","584394","586733",
            "92309","92310","93367","587165","92774","92989","92948","586394","92311","579085","92312","584384","587346","586830","584723","92850",
            "93294","586042","92633","93624","93201","93599","581721","92619","582949","93380","583167","92314","93300","92698","579998","93433",
            "586634","92794","92687","93602","92861","92810","579474","92893","93702","93373","92925","92445","93324","580948","92315","93361",
            "92958","580441","92990","585858","92622","92778","93014","586706","92795","92446","585793","93046","580299","93531","584453","92316",
            "587270","581903","93532","93083","584802","585564","93115","92787","93146","92321","579492","93178","92322","92501","586039","92808",
            "582413","93266","93202","92500","93394","92682","93477","92323","580910","93282","93563","92449","579506","93425","584902","92324",
            "92729","580450","582977","92325","585236","92450","93481","584749","92716","580951","92926","93327","92326","586043","92991","92327",
            "93451","93015","93047","586016","585188","93084","585630","92523","93116","93179","93203","587645","579849","92329","92452","579716",
            "93234","92736","92789","93571","93471","92863","93296","92645","92511","92927","92960","579197","92664","92992","92330","585509",
            "92607","587208","587332","92806","93085","93180","92775","92628","92331","580611","584952","93466","586639","582315","92796","580420",
            "92864","585669","584628","579663","580157","93260","92928","586440","92961","92993","93017","583035","583399","92333","579114","580433",
            "92454","93118","92334","92335","92453","93641","92747","92336","586728","93444","92751","93149","92337","92338","579787","93320",
            "92339","582398","93265","579726","92829","93205","92673","92706","92865","92342","579569","92456","583086","580147","93683","93461",
            "587562","92570","584178","93579","92343","92578","92616","581232","586808","92457","93566","580428","579139","92458","92344","92345",
            "92490","583130","93018","93050","582687","579876","93620","579026","92756","93554","93589","585820","582592","92347","92719","93377",
            "93317","580099","580341","92866","586909","93667","582448","93473","92459","92348","93475","93283","92547","92762","92898","579606",
            "581052","581024","92930","92994","92963","586662","580509","92350","92591","587219","583420","580525","92659","92831","580983","92494",
            "92995","93019","93445","583479","93381","586318","579067","92524","92351","580714","92683","93041","92710","93689","93561","584561",
            "92742","580587","579312","581031","585757","92392","93290","93151","586553","581032","579173","92700","580183","92529","585293","92352",
            "92518","579651","586237","92580","92899","579024","93694","93354","586471","92779","579334","580332","92996","93279","583662","93020",
            "584362","581716","93089","579699","581585","92406","579895","92461","93526","93488","92585","586807","93121","582373","92771","92355",
            "92463","93208","581002","583469","92788","93483","92356","92597","93568","586220","584424","585735","92357","580161","92531","93535",
            "92900","93582","92464","92465","93384","586209","92833","586125","92359","586955","587692","579603","582405","92400","93669","93413",
            "579561","92997","579722","92530","587129","92360","580310","93021","581044","93494","93053","92362","93090","93660","93122","586675",
            "93153","92363","92713","584428","586785","92365","92366","580150","92367","92635","92869","92901","580271","579198","587054","92368",
            "583318","580434","579672","92369","582778","93271","582474","585983","93617","92966","579162","579299","586988","92998","92800",
            "93460","92609","92637","93547","93054","92371","92544","92408","92372","582391","92732","93123","92373","92466","585590","587276",
            "93185","93210","93301","93241","583378","92845","93339","579935","93184","92877","585519","93500","584951","92909","583480","587685",
            "92376","92974","92561","93030","92377","582332","92908","586550","580947","93061","92684","92575","92379","583149","92499","93453",
            "92380","92467","579387","93647","93258","93163","93217","93388","92382","579845","92574","92910","579533","92695","579511","92630",
            "92943","92383","92384","93342","93626","583016","92975","92387","93062","580191","580876","587324","92469","585292","92546","92737",
            "579127","93601","93676","586694","585634","92390","583134","93550","93164","93250","92847","586088","93457","92471","92349","579274",
            "92677","585306","92631","587327","584614","92911","586278","93326","92976","93032","581271","93063","92554","587493","579715","585659",
            "92222","93069","93520","93101","93378","93672","93329","93353","93440","93165","585378","586551","92834","93438","582832","93331",
            "93251","92848","93497","585716","587373","92491","92945","92757","587569","92393","92517","93098","93459","580514","582416","586823",
            "92835","93541","584933","93033","585359","580128","583360","93464","586447","93064","92395","587286","93102","93496","92396","93134",
            "580535","92274","92596","92397","93220","93462","93252","92728","93447","579292","586937","92553","93127","587067","92903","584833",
            "92478","585262","585875","92883","582362","579553","587100","92949","92261","587639","92426","92487","579521","579347","585615",
            "587271","581633","93227","586772","93009","92857","92297","92301","580565","92188","92441","93557","92306","93371","93409","580447",
            "92448","579636","585872","583957","92340","582431","93332","92346","92801","93587","579652","92468","92750","92388","92391","586448",
            "93603");

    public static void exportCompletedListingsAsJson() {

        Queue queue = QueueFactory.getDefaultQueue();
        try {
            queue.add(withUrl("/cron/paginatedexport"));
        } catch (Exception ex) {
            Logger.error(ex, "Error adding export task to the queue");
        }
        ok();
    }

    public static void paginatedExport(String cursor) {
        Queue queue = QueueFactory.getDefaultQueue();
        String dateString = DocumentUtils.dateString();
        DatastoreService datastore = DatastoreServiceFactory.getDatastoreService();
        FetchOptions fetchOptions = FetchOptions.Builder.withLimit(EXPORT_PAGE_SIZE);

        if (cursor != null) {
            fetchOptions.startCursor(Cursor.fromWebSafeString(cursor));
        }

        Query q = new Query("listing");
        PreparedQuery pq = datastore.prepare(q);
        QueryResultList<Entity> results = pq.asQueryResultList(fetchOptions);

        boolean thereWereResultsThisTime = false;
        for (Entity listing : results) {
            if ((boolean)listing.getProperty("serviceSubmitted")) {
                // It's a completed listing
                try {
                    if (OK_SUPPLIER_IDS.contains(listing.getProperty("supplierId"))) {
                        queue.add(withUrl("/cron/exportcompleted").param("date", dateString).param("id", Long.toString(listing.getKey().getId())));
                    }
                } catch (Exception ex) {
                    Logger.error(ex, "Error adding a completed listing to the export queue");
                }
            } else {
                // It's a draft listing
                try {
                        queue.add(withUrl("/cron/exportdraft").param("date", dateString).param("id", Long.toString(listing.getKey().getId())));
                } catch (Exception ex) {
                    Logger.error(ex, "Error adding a draft listing to the export queue");
                }
            }
            thereWereResultsThisTime = true;
        }

        String cursorString = results.getCursor().toWebSafeString();

        if (thereWereResultsThisTime) {
            try {
                // We haven't got to the end yet - add a task to fetch the next page of listings
                queue.add(withUrl("/cron/paginatedexport").param("cursor", cursorString));
            } catch (Exception ex) {
                Logger.error(ex, "Error adding export task to the queue");
            }
        }
        ok();
    }

    public static void exportCompletedListing(String date, Long id) {
        exportListing(date, id, completedUploader);
    }

    public static void exportDraftListing(String date, Long id) {
        exportListing(date, id, draftUploader);
    }

    private static void exportListing(String date, Long id, S3Uploader uploader) {
        Listing listing = Listing.getByListingId(id);
        if(listing == null) {
            Logger.warn(String.format("Export listing: Invalid listing id [%d] provided", id));
            return;
        }
        String listingJSON = ListingToJSONConverter.convertToJson(listing);
        byte[] listingBytes;
        try {
            listingBytes = listingJSON.getBytes("UTF-8");
        } catch (java.io.UnsupportedEncodingException ex) {
            listingBytes = listingJSON.getBytes();
        }
        String documentKey = String.format("%s/%s/%s", date, listing.supplierId, DocumentUtils.s3ExportFilename(listing.id));
        String documentUrl = uploader.upload(listingBytes, documentKey);
        Logger.info(String.format("Uploaded listing to: %s", documentUrl));
    }
}
